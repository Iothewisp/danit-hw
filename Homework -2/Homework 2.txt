1a. Kernel - ядро - ядро Операционной системы  является основой Операционной системы  определяющей ее функциональность , производительность безопасность Etc. Оно стало частью множества Операционных систем 
Ядро Linux открыто лицензией GNU точнее 
В 1969 году в дочернем подразделении компании AT&T – Bell Laboratories – была выпущена операционная система Unix, которая стала основной для большого количества операционных систем того времени. 
UNIX была проприетарной системой, лицензия на нее стоила порядка 40 000 долларов. Таким образом, позволить себе ее покупку могли только крупные компании. 
Это послужило толчком для старта в 1983 году проекта GNU – GNU is Not Unix. Его основоположник, Ричард Столлман, объявил целью проекта создание свободно распространяемой операционной системы.
 Чуть позже Столлманом был написан знаменитый манифест GNU, который стал основой для лицензии GPL (GNU General Public License), актуальной и по сей день.
 К началу 1990-х годов в рамках проекта GNU было написано большинство компонентов ОС – оболочка bash, компиляторы, отладчик, текстовый редактор и др. Не хватало лишь ядра операционной системы.

В 1991 году Линус Торвальдс, будучи студентом финского университета, увлекся идеей написания ядра операционной системы для своего персонального компьютера с процессором Intel.
 Вдохновлением и прототипом для будущего Linux стала совместимая с Unix операционная система для персональных компьютеров Minix. Уже в августе 1991 года было написано ядро операционной системы,
 в нее были портированы оболочка bash и компилятор gсс из проекта GNU. По признанию самого Линуса, изначально это было не более, чем хобби, однако проект оказался весьма востребованным, к нему начали присоединяться разработчики со всего мира.\
 Дополненная массой программ, разработанных в рамках проекта GNU, ОС Linux стала пригодна для практического использования. При этом ядро системы распространялось под лицензией GNU General Public License, что гарантировало свободное распространение кода ядра системы. 
ОК далее :
Дистрибутив Linux — это операционная система, созданная на основе ядра Linux, которая включает в себя набор библиотек и утилит (пакетов), разработанных в рамках проекта GNU, а также систему управления пакетами (менеджер пакетов).
В настоящее время существует более 500 различных дистрибутивов, разрабатываемых как при коммерческой поддержке (Red Hat / Fedora, SLED / OpenSUSE, Ubuntu и др.), так и исключительно усилиями добровольцев (Debian, Slackware, Gentoo, ArchLinux и др.). 
Алгоритм включения сервера и загрузки Linux в большинстве случаев выглядит следующим образом:

    BIOS / UEFI → MBR / GPT
    Выполняется код, заложенный производителем аппаратного обеспечения. Этот код проводит тестирование системы POST (Power On Self Test) и передает управление загрузчику в MBR (Master Boot Record) / GPT (GUID Partition Table)

    MBR / GPT → GRUB2 (существуют и другие загрузчики)
    Загрузчик из MBR / GPT очень простой – он способен только найти на диске и запустить следующий загрузчик. Как правило это GRUB2, но существуют и другие загрузчики, например LILO (в настоящее время практически не используется)

    GRUB2 → Kernel
    GRUB2 расположен на разделе жесткого диска в каталоге /boot. GRUB2 загружает ядро Linux (vmlinuz)

    Kernel → Init
    Ядро запускает процесс инициализации операционной системы. Как правило это SystemD, но существуют и другие системы инициализации, например SystemV (в настоящее время практически не используется). Процесс инициализации запускает все остальные процессы в системе

Что же такое ядро?

Ядро — посредником между железом компьютера (процессором, видеокартой, оперативной памятью и пр.) и его программным обеспечением.
 Оно управляет процессами, памятью, устройствами и обрабатывает системные вызовы. В ядре содержатся драйверы устройств, которые загружаются в память или подключаются при необходимости для определенного устройства.

На компьютере можно одновременно запустить несколько программ. Одни работают в фоновом режиме, другие — ожидают конкретных действий, третьи принимают данные из запущенных программ. 
Ядро распределяет ресурсы ПК между программами и организует всю работу. Существует три типа: микроядра, монолитные, гибридные.







2b. Libraries - библиотеки в Линкус :   Библиотеки это набор функций, которые могут использоваться в различных программах.
 Библиотеки могут быть статические (библиотека привязывается к определенной программе или софт содержит данную библиотеку в своем теле.) и динамическими (библиотеки грузятся в оперативную память и используются). 
Плюсы первого варианта нет проблемы совместимости, т. к. софт уже в себе содержит библиотеку, библиотека всегда с собой. 
Но при этом программы становятся большие по размеры и т.к каждая может загружать свои библиотеки, а иногда и одинаковые. 
Второй вариант значительно лучше, сами программы по своему размеру меньше. Библиотека загружается один раз в оперативку. 
И следующая программа, которой необходимы такие же функции, берет и использует эти данные.

По умолчанию библиотеки в Linux находятся в двух папках. Это корневая папка /lib в ней находятся библиотеки, которые используют программы, расположенные в корневой папке /bin.
Библиотеки в Linux содержат наборы функций или если сказать проще алгоритмов или действий для решения определенных задач. 
Например, если программе нужно вывести строку на экран она не начинает сама закрашивать нужные пиксели, а просто обращается к отвечающей за это функции из библиотеки,
 то же самое если программе нужно прочитать содержимое файла, она не работает с секторами жесткого диска, ей достаточно вызвать функцию из стандартной библиотеки с (libc.so) и передать ей в параметрах имя нужного файла, а библиотека уже вернет ей запрашиваемые данные.













3c. System utilities- Системные утилиты  Современные операционные системы предоставляют пользователям огромное количество возможностей, 
однако иногда для максимальной эффективности работы требуется дополнительная настройка и оптимизация.
 В этом контексте системные утилиты становятся незаменимыми помощниками, предлагая разнообразные функции для очистки, настройки параметров и повышения производительности компьютера.

От скрытия системных процессов до анализа и управления ресурсами, от тонкой настройки параметров до расширения возможностей файловых менеджеров – встроенные и сторонние приложения предлагают широкий спектр функций. 
Возможности таких утилит позволяют пользователям не только улучшить работу своей системы, но и обеспечить её защиту с помощью интегрированных сканеров и антивирусов
Одной из ключевых задач таких утилит является анализ и проверка различных аспектов системы, таких как конфигурация оборудования, статус сетевых подключений, управление процессами и службами. 

  